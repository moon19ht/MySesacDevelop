데이터베이스는 순차검색(sequential 검색)
순서대로 차례대로 
1 2 3 4 5 6 7 8 9 10 ....................... 100만 
처음부터 차례대로 읽어서 데이터 나올때 까지 - 속도 
1
데이터가 n개 있을때는 운나쁘면 n번째에  O(n) 빅오표기법 
n이 커질수록 시간이 많이 걸린다. 
오라클의 경우에는 순차검색, 병렬처리(데이터를 읽는 프로세스가 여러개 
동시에 동작), mysql은 병렬처리 

색인순차검색(index 검색)
1~100만 
 
AA(1~1000) --   A 1~100
   --  B 101~200
   --  C 201~300

색인표가 구성되어 있어서 색인표 먼저 찾고 그리고 해당 색인표에서 데이터를 
찾는 방식  O(logN)
1.자동구성 , primary key필드는 무조건 index가 만들어진다. 
  primary key를 이용한 검색을사람들이 많이 한다. 

2.사용자구성
  -- where 조건절에서 자주 사용되는 필드 
  -- order by 절 
  -- join절 
  색인이 너무 많이 만들어지면 시스템 성능을 떨어뜨린다. 
  where gender='M' 이경우에 인덱스를 만들면 인덱스 만들필요없음 
  데이터 전체가 10000건 이내- 오라클같은경우는 100만건이내는 냅둔다
  색인은 병렬처리 안됨 
  색인에서 먼저 찾고 원데이터에서 찾고 반복 
  데이터 분포도가 한쪽에 50넘어가는 값이 있을경우 색인이 의미가 없음 
  주소 (서울시, 경기도 로 검색 ) 주로 2~3프로의 값의 범위를 가질때
  심지어 색인을 잘못 만들면 옵티마이저(쿼리최적화)가 싹 무시하고 간다 


뷰 : 디비구조가 엄청 복잡하고 여러개의 테이블로부터 데이터를 조인해야 할경우 
쿼리 자체를 저장해놓고 테이블처럼 사용이 가능하다.
조회용, 뷰를 통해서 원본테이블에 데이터를 업데이트할수는 있지만 거의 쓰지 않는다 
create view 뷰이름 as 조회쿼리;

use sakila;
-- 없으면 만들고 있으면 수정해라 
-- mysql 5이상일 때 지원함 
create or replace view v_customer as 
select concat(a.last_name, " ",a.first_name) customer_name
, postal_code, district, phone, location, address
from customer a 
join address b on a.address_id=b.address_id;

-- 가상의 테이블 
select * from v_customer
where customer_name like '%smith%';


foreign key를 만들려면 참조되는테이블의 필드가 primary key거나unique 조건을 
만족해야 한다. 

unique key 제약조건은 중복불가 , null값 허용 
후보키-primary key가능성이 있는 필드 
특정필드가 primary key를 지정은 못하지만 중복되면 안될때 unique 
제약조건으로 대신한다. 

윈도우함수 (분석함수)
분석용함수이다, 그룹함수 대체 함수, 그룹함수를 좀 쉽게 사용하고 
속도도 빠르다 
형식
윈도우 함수(컬럼) over([partition  by컬럼]
                     [order by 컬럼] 
                     [rows between ...]) 

row_number()  중복없이 순번을 부여하는 함수 
sum() 합계함수   그룹함수인 sum 과 윈도우함수의 sum은 over 유무 
윈도우 의미 - rows between 시작위치 and 마지막위치 


